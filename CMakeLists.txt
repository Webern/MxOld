cmake_minimum_required(VERSION 3.7.2)
project(Mx)

include(GNUInstallDirs)
include(CMakePackageConfigHelpers)

option(MX_BUILD_TESTS "build or skip the test suite" OFF)

option(
    MX_BUILD_CORE_TESTS
    "build or skip the tests in the 'core' namespace, requires MX_BUILD_TESTS"
    OFF
)

#set(CMAKE_BINARY_DIR "./Build")
set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR})
set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR})

set(SOURCE_ROOT "${CMAKE_CURRENT_SOURCE_DIR}/Sourcecode")
set(PRIVATE_DIR "${SOURCE_ROOT}/private")
set(PUBLIC_DIR "${SOURCE_ROOT}/include")

file(GLOB_RECURSE HEADERS_MX_API ${PUBLIC_DIR}/mx/api/*.h)
file(GLOB_RECURSE SRC_MX_API ${PRIVATE_DIR}/mx/api/*.cpp ${PRIVATE_DIR}/mx/api/*.h)
file(GLOB_RECURSE SRC_MX_CORE ${PRIVATE_DIR}/mx/core/*.c* ${PRIVATE_DIR}/mx/core/*.h*)
file(GLOB_RECURSE SRC_MX_IMPL ${PRIVATE_DIR}/mx/impl/*.cpp ${PRIVATE_DIR}/mx/impl/*.h)
file(GLOB_RECURSE SRC_MX_PUGIXML ${PRIVATE_DIR}/mx/pugixml/*.cpp ${PRIVATE_DIR}/mx/pugixml/*.hpp)
file(GLOB_RECURSE SRC_MX_UTILITY ${PRIVATE_DIR}/mx/utility/*.cpp ${PRIVATE_DIR}/mx/utility/*.h)
file(GLOB_RECURSE SRC_MX_EXTERN ${PRIVATE_DIR}/extern/*.cpp ${PRIVATE_DIR}/extern/*.h)

file(GLOB_RECURSE SRC_MX_TEST_API ${PRIVATE_DIR}/mxtest/api/*.cpp ${PRIVATE_DIR}/mxtest/api/*.h)
file(GLOB_RECURSE SRC_MX_TEST_CONTROL ${PRIVATE_DIR}/mxtest/control/*.cpp ${PRIVATE_DIR}/mxtest/control/*.h)
file(GLOB_RECURSE SRC_MX_TEST_FILE ${PRIVATE_DIR}/mxtest/file/*.cpp ${PRIVATE_DIR}/mxtest/file/*.h)
file(GLOB_RECURSE SRC_MX_TEST_IMPL ${PRIVATE_DIR}/mxtest/impl/*.cpp ${PRIVATE_DIR}/mxtest/impl/*.h)
file(GLOB_RECURSE SRC_MX_TEST_CORE ${PRIVATE_DIR}/mxtest/core/*.cpp ${PRIVATE_DIR}/mxtest/core/*.h)
file(GLOB_RECURSE SRC_MX_TEST_IMPORT ${PRIVATE_DIR}/mxtest/import/*.cpp ${PRIVATE_DIR}/mxtest/import/*.h)
file(GLOB_RECURSE SRC_MX_TEST_UTILITY ${PRIVATE_DIR}/mxtest/utility/*.cpp ${PRIVATE_DIR}/mxtest/utility/*.h)
#file(GLOB_RECURSE SRC_MX_TEST_XML ${PRIVATE_DIR}/mxtest/xml/*.cpp ${PRIVATE_DIR}/mxtest/xml/*.h)
file(GLOB_RECURSE SRC_CPUL ${PRIVATE_DIR}/cpul/*.cpp ${SOURCE}/cpul/*.h)

# Mx Library
add_library(${PROJECT_NAME} STATIC ${SRC_MX_API} ${SRC_MX_CORE} ${SRC_MX_IMPL} ${SRC_MX_PUGIXML} ${SRC_MX_UTILITY})
source_group( "api-public" FILES ${HEADERS_MX_API})
source_group( "api" FILES ${SRC_MX_API} )
source_group( "core" FILES ${SRC_MX_CORE} )
source_group( "impl" FILES ${SRC_MX_IMPL} )
source_group( "pugixml" FILES ${SRC_MX_PUGIXML} )
source_group( "utility" FILES ${SRC_MX_UTILITY} )
source_group( "extern" FILES ${SRC_MX_EXTERN} )
set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 14)

target_include_directories(${PROJECT_NAME} PRIVATE ${PRIVATE_DIR})
add_subdirectory("${PRIVATE_DIR}/extern/ezxml")
target_link_libraries(${PROJECT_NAME} PUBLIC ezxml)
target_include_directories(${PROJECT_NAME} PRIVATE "${PRIVATE_DIR}/extern/ezxml/src/include")
target_include_directories(${PROJECT_NAME} PUBLIC
    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
    $<BUILD_INTERFACE:${PUBLIC_DIR}>
)

# Install Package Configuration
install(TARGETS ${PROJECT_NAME} EXPORT ${PROJECT_NAME}_targets)
install(EXPORT ${PROJECT_NAME}_targets
    NAMESPACE ${PROJECT_NAME}::
    FILE ${PROJECT_NAME}-config.cmake
    DESTINATION "${CMAKE_INSTALL_DATADIR}/cmake/${PROJECT_NAME}"
)
install(DIRECTORY "${PUBLIC_DIR}/mx" DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}")

file(WRITE ${PRIVATE_DIR}/mxtest/file/PathRoot.h
    "// This file is auto generated by CMake
    // To override these paths, pass in macro definitions to the compiler.
    #pragma once

    // The absolute path to the root of the repository.
    #ifndef MX_REPO_ROOT_PATH
    #define MX_REPO_ROOT_PATH \"${CMAKE_CURRENT_SOURCE_DIR}\"
    #endif

    // The absolute path to the binary output directory.
    #ifndef MX_BINARY_OUTPUT_PATH
    #define MX_BINARY_OUTPUT_PATH \"${CMAKE_BINARY_DIR}\"
    #endif"
)


# MxTest
if(MX_BUILD_TESTS)
    message("tests will be compiled")
    if(MX_BUILD_CORE_TESTS)
        message("core tests will be compiled")
        # add_compile_definitions(MX_COMPILE_CORE_TESTS)
        add_definitions(-DMX_COMPILE_CORE_TESTS)
    else()
        message("core tests will not be compiled")
    endif()    
    find_package( Threads )
    add_executable(MxTest ${SRC_MX_TEST_API} ${SRC_MX_TEST_CONTROL} ${SRC_MX_TEST_CORE} ${SRC_MX_TEST_FILE} ${SRC_MX_TEST_IMPL} ${SRC_MX_TEST_IMPORT} ${SRC_MX_TEST_UTILITY} ${SRC_MX_TEST_XML} ${SRC_CPUL})
    target_include_directories(MxTest PRIVATE ${PRIVATE_DIR})
    target_include_directories(MxTest PRIVATE "${PRIVATE_DIR}/extern/ezxml/src/include")
    target_link_libraries(MxTest ${PROJECT_NAME})
    target_link_libraries(MxTest ${CMAKE_THREAD_LIBS_INIT})
    set_property(TARGET MxTest PROPERTY CXX_STANDARD 14)
else()
  message("tests will not be compiled")
endif()

# MxExamples
if(MX_BUILD_EXAMPLES)
    message("examples will be compiled")   
    find_package( Threads )
    add_executable(MxRead ${PRIVATE_DIR}/mx/examples/Read.cpp)
    add_executable(MxWrite ${PRIVATE_DIR}/mx/examples/Write.cpp)
    add_executable(MxHide ${PRIVATE_DIR}/mx/examples/Hide.cpp)
    target_link_libraries(MxRead ${PROJECT_NAME} ${CMAKE_THREAD_LIBS_INIT})
    target_link_libraries(MxWrite ${PROJECT_NAME} ${CMAKE_THREAD_LIBS_INIT})
    target_link_libraries(MxHide ${PROJECT_NAME} ${CMAKE_THREAD_LIBS_INIT})
    set_property(TARGET MxRead PROPERTY CXX_STANDARD 14)
    set_property(TARGET MxWrite PROPERTY CXX_STANDARD 14)
    set_property(TARGET MxHide PROPERTY CXX_STANDARD 14)
else()
  message("examples will not be compiled")
endif()

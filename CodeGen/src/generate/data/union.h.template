{{ documentation }}
        class {{ classname }}
        {
        public:
            explicit {{ classname }}();
{{ variants_ctor_decl }}
            explicit {{ classname }}( const std::string& value );
{{ variants_get_is_decl }}
{{ variants_set_decl }}
{{ variants_get_decl }}
            bool parse( const std::string& value );
            
        private:
            std::variant<{{ variants_template_decl }}> myValue;
        };
        
        std::string toString( const {{ classname }}& value );
		std::ostream& toStream( std::ostream& os, const {{ classname }}& value );
		std::ostream& operator<<( std::ostream& os, const {{ classname }}& value );